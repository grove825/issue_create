name: CI

on:
  push: ~
  pull_request: ~


permissions:
  contents: read
  issues: write

env:
  CACHE_VERSION: 11
  UV_CACHE_VERSION: 1
  MYPY_CACHE_VERSION: 9
  DEFAULT_PYTHON: "3.12"
  ALL_PYTHON_VERSIONS: "['3.12', '3.13']"
  PRE_COMMIT_CACHE: ~/.cache/pre-commit
  UV_CACHE_DIR: /tmp/uv-cache

jobs:
    pre-commit:
      name: Prepare pre-commit base
      runs-on: ubuntu-24.04
      if: |
        github.event.inputs.pylint-only != 'true'
        && github.event.inputs.mypy-only != 'true'
        && github.event.inputs.audit-licenses-only != 'true'
      steps:
        - name: Check out code from GitHub
          uses: actions/checkout@v4.2.2
        - name: Set up Python ${{ env.DEFAULT_PYTHON }}
          id: python
          uses: actions/setup-python@v5.3.0
          with:
            python-version: ${{ env.DEFAULT_PYTHON }}
            check-latest: true
        - name: Restore base Python virtual environment
          id: cache-venv
          uses: actions/cache@v4.2.0
          with:
            path: venv
            key: >-
              ${{ runner.os }}-${{ steps.python.outputs.python-version }}-venv-${{
                needs.info.outputs.pre-commit_cache_key }}
        - name: Create Python virtual environment
          if: steps.cache-venv.outputs.cache-hit != 'true'
          run: |
            python -m venv venv
            . venv/bin/activate
            python --version
            pip install uv
            uv pip install -r requirements-dev.txt
        - name: Restore pre-commit environment from cache
          id: cache-precommit
          uses: actions/cache@v4.2.0
          with:
            path: ${{ env.PRE_COMMIT_CACHE }}
            lookup-only: true
            key: >-
              ${{ runner.os }}-${{ steps.python.outputs.python-version }}-${{
                needs.info.outputs.pre-commit_cache_key }}
        - name: Install pre-commit dependencies
          if: steps.cache-precommit.outputs.cache-hit != 'true'
          run: |
            . venv/bin/activate
            pre-commit install-hooks
    lint-ruff-format:
      name: Check ruff-format
      runs-on: ubuntu-24.04
      needs:
        - pre-commit
      steps:
        - name: Check out code from GitHub
          uses: actions/checkout@v4.2.2
        - name: Set up Python ${{ env.DEFAULT_PYTHON }}
          uses: actions/setup-python@v5.3.0
          id: python
          with:
            python-version: ${{ env.DEFAULT_PYTHON }}
            check-latest: true
        - name: Restore base Python virtual environment
          id: cache-venv
          uses: actions/cache/restore@v4.2.0
          with:
            path: venv
            fail-on-cache-miss: true
            key: >-
              ${{ runner.os }}-${{ steps.python.outputs.python-version }}-venv-${{
                needs.info.outputs.pre-commit_cache_key }}
        - name: Restore pre-commit environment from cache
          id: cache-precommit
          uses: actions/cache/restore@v4.2.0
          with:
            path: ${{ env.PRE_COMMIT_CACHE }}
            fail-on-cache-miss: true
            key: >-
              ${{ runner.os }}-${{ steps.python.outputs.python-version }}-${{
                needs.info.outputs.pre-commit_cache_key }}
        - name: Run ruff-format
          run: |
            . venv/bin/activate
            pre-commit run --hook-stage manual ruff-format --all-files --show-diff-on-failure
          env:
            RUFF_OUTPUT_FORMAT: github
    lint-ruff:
      name: Check ruff
      runs-on: ubuntu-24.04
      needs:
        - pre-commit
      steps:
        - name: Check out code from GitHub
          uses: actions/checkout@v4.2.2
        - name: Set up Python ${{ env.DEFAULT_PYTHON }}
          uses: actions/setup-python@v5.3.0
          id: python
          with:
            python-version: ${{ env.DEFAULT_PYTHON }}
            check-latest: true
        - name: Restore base Python virtual environment
          id: cache-venv
          uses: actions/cache/restore@v4.2.0
          with:
            path: venv
            fail-on-cache-miss: true
            key: >-
              ${{ runner.os }}-${{ steps.python.outputs.python-version }}-venv-${{
                needs.info.outputs.pre-commit_cache_key }}
        - name: Restore pre-commit environment from cache
          id: cache-precommit
          uses: actions/cache/restore@v4.2.0
          with:
            path: ${{ env.PRE_COMMIT_CACHE }}
            fail-on-cache-miss: true
            key: >-
              ${{ runner.os }}-${{ steps.python.outputs.python-version }}-${{
                needs.info.outputs.pre-commit_cache_key }}
        - name: Run ruff
          run: |
            . venv/bin/activate
            pre-commit run --hook-stage manual ruff --all-files --show-diff-on-failure
          env:
            RUFF_OUTPUT_FORMAT: github
